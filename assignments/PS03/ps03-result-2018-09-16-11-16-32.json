{
    "tests": [
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_jbehfnxd/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 285, in test_draw_box\n    msg=error_msg)\nAssertionError: Number of drawn pixels too far from expected amount.\n",
            "description": "Test for draw_box (5 points)"
        },
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_jbehfnxd/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 329, in test_get_corners_list\n    self.assertEqual(a[1], b[1], msg=error_msg % ('Y', i, b[1], a[1]))\nAssertionError: Y outside of tolerance at index 1. Expected 199.0 instead got 200.0.\n",
            "description": "Test for get_corners_list (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_markers with noise: just circles (15 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_markers on empty background (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_markers with noise: circles + gaussian (15 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for project_imageA_onto_imageB (20 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_four_point_transform (20 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for video_frame_generator (5 points)"
        }
    ],
    "unauthorized_lib_calls": []
}
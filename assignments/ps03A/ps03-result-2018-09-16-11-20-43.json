{
    "tests": [
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_vjinercu/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 244, in test_detection_in_simulated_with_gaussian_and_circles\n    self.assertTrue(x_dist_test and y_dist_test, msg=error_msg)\nAssertionError: Expected (101.0,42.0)  with acceptable distance 2 but got (104.0,41.0)\n",
            "description": "Test for find_markers with noise: circles + gaussian (15 points)"
        },
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_vjinercu/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 285, in test_draw_box\n    msg=error_msg)\nAssertionError: Number of drawn pixels too far from expected amount.\n",
            "description": "Test for draw_box (5 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_markers with noise: just circles (15 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_markers on empty background (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for get_corners_list (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for project_imageA_onto_imageB (20 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for find_four_point_transform (20 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for video_frame_generator (5 points)"
        }
    ],
    "unauthorized_lib_calls": []
}
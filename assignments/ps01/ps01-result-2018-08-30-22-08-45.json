{
    "tests": [
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_cedvnuta/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 285, in test_addnoise\n    student = ps1.add_noise(np.copy(test_image), channel, input_stddev)\n  File \"/home/vmuser_cedvnuta/workspace/ps1.py\", line 275, in add_noise\n    noise=np.random.randn( temp_image.shape )*sigma\n  File \"mtrand.pyx\", line 1404, in mtrand.RandomState.randn (numpy/random/mtrand/mtrand.c:19843)\n  File \"mtrand.pyx\", line 1534, in mtrand.RandomState.standard_normal (numpy/random/mtrand/mtrand.c:20368)\n  File \"mtrand.pyx\", line 167, in mtrand.cont0_array (numpy/random/mtrand/mtrand.c:6127)\nTypeError: 'tuple' object cannot be interpreted as an index\n",
            "description": "Test for add_noise (10 points)"
        },
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_cedvnuta/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 274, in test_differenceimage\n    \"Correct answer: \\n{}\".format(student, ref))\nAssertionError: The difference at one pixel value was unexpectedly large. Make sure you subtract the shifted image from the original and not the other way around. Additionally, the pixel values should be normalized and scaled using a min max method so they are in [0, 255]. Finally, make sure you pay special attention to which data type you use when performing arithmetic operations.\nStudent's answer: \n[[195  73 125  93  68 200 136 108 117  89 119]\n [123  24 218   4 121 136 160 171  80 122 119]\n [176  97 165 155  90   6 151 133 154 163 119]\n [  9 115 176 149  24 180 155 134 104 129 119]\n [ 61  43 216  50 149 147  87 140 172 107 119]\n [217  13 244  93  92  82 206  45 146 141 119]\n [ 55  96 201 174 107 113  61  94 123  77 119]\n [ 76 106 171  34 233  94 103  76 124 117 119]\n [194  88 116  83 172  65 180 139 157   0 119]\n [125 102 118 135 157 194   4 101 255   3 119]\n [  2 127 239  49 177 130  31 198 133  24 119]]\nCorrect answer: \n[[ 195.35799523   73.03102625  125.3699284    93.72315036   68.16229117\n   200.22673031  136.93317422  108.32935561  117.45823389   89.46300716\n   119.89260143]\n [ 123.54415274   24.9522673   218.48448687    4.2601432   121.71837709\n   136.32458234  160.66825776  171.62291169   80.94272076  122.32696897\n   119.89260143]\n [ 176.49164678   97.98329356  165.53699284  155.19093079   90.68019093\n     6.69451074  151.53937947  133.8902148   154.5823389   163.1026253\n   119.89260143]\n [   9.12887828  115.63245823  176.49164678  149.10501193   24.34367542\n   180.14319809  155.19093079  134.49880668  104.6778043   129.6300716\n   119.89260143]\n [  61.46778043   43.21002387  216.05011933   50.51312649  149.71360382\n   147.88782816   87.02863962  140.58472554  172.84009547  107.11217184\n   119.89260143]\n [ 217.87589499   13.99761337  244.65393795   93.11455847   92.50596659\n    82.15990453  206.92124105   45.03579952  146.06205251  141.80190931\n   119.89260143]\n [  55.38186158   96.1575179   201.44391408  174.05727924  107.72076372\n   113.80668258   61.46778043   94.33174224  123.54415274   77.89976134\n   119.89260143]\n [  76.07398568  106.50357995  171.62291169   34.08114558  233.09069212\n    94.94033413  103.46062053   76.68257757  124.76133652  117.45823389\n   119.89260143]\n [ 194.74940334   88.85441527  116.849642     83.37708831  172.23150358\n    65.72792363  180.14319809  139.97613365  157.62529833    0.\n   119.89260143]\n [ 125.3699284   102.24343675  118.67541766  135.10739857  157.01670644\n   194.14081146    4.2601432   101.02625298  255.            3.65155131\n   119.89260143]\n [   2.43436754  127.19570406  239.17661098   49.90453461  177.70883055\n   130.23866348   31.64677804  198.40095465  133.8902148    24.9522673\n   119.89260143]]\n",
            "description": "Test for difference Image (10 points)"
        },
        {
            "output": {
                "passfail": "failed"
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_cedvnuta/CVResult.py\", line 29, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 245, in test_shiftimageleft\n    \"Correct answer: \\n{}\".format(shift, test_image, student, ref))\nAssertionError: The difference at one pixel value was unexpectedly large. Make sure you handle the border as instructed.\nShift value used: 4\nTest array: \n[[ 51 221  95 113  31  23 221 132 182  21 100]\n [106 137 251 128  81 229 182 177 239  74 115]\n [193  52 113  31 199  60 209 240 188  21 251]\n [ 94 113 146  79   9  13  91 187 173 200 195]\n [ 85 192 203 184 145 142  60 156 144  46 147]\n [198 191 207  42  35  31  41   0 161  19 105]\n [100 157 214 251 247  88 251 222  74  96 221]\n [117 159   6  26 183   3 250  57  43  24 113]\n [215 219 102  14 236  27 133 254  46  99 235]\n [223  59 156 243 228  39 121 223  43  21   6]]\nStudent's answer: \n[[ 31  23 221 132 182  21 100 132 182  21 100]\n [ 81 229 182 177 239  74 115 177 239  74 115]\n [199  60 209 240 188  21 251 240 188  21 251]\n [  9  13  91 187 173 200 195 187 173 200 195]\n [145 142  60 156 144  46 147 156 144  46 147]\n [ 35  31  41   0 161  19 105   0 161  19 105]\n [247  88 251 222  74  96 221 222  74  96 221]\n [183   3 250  57  43  24 113  57  43  24 113]\n [236  27 133 254  46  99 235 254  46  99 235]\n [228  39 121 223  43  21   6 223  43  21   6]]\nCorrect answer: \n[[ 31  23 221 132 182  21 100 100 100 100 100]\n [ 81 229 182 177 239  74 115 115 115 115 115]\n [199  60 209 240 188  21 251 251 251 251 251]\n [  9  13  91 187 173 200 195 195 195 195 195]\n [145 142  60 156 144  46 147 147 147 147 147]\n [ 35  31  41   0 161  19 105 105 105 105 105]\n [247  88 251 222  74  96 221 221 221 221 221]\n [183   3 250  57  43  24 113 113 113 113 113]\n [236  27 133 254  46  99 235 235 235 235 235]\n [228  39 121 223  43  21   6   6   6   6   6]]\n",
            "description": "Test for shiftImageLeft (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for copy_paste_middle (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for extractGreen (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for extractRed (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for image_stats max return value (5 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for image_stats mean return value (5 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for image_stats min return value (5 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for image_stats stddev return value (5 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for center normalized (10 points)"
        },
        {
            "output": {
                "passfail": "passed"
            },
            "traceback": "",
            "description": "Test for swap_green_blue (10 points)"
        }
    ],
    "unauthorized_lib_calls": []
}